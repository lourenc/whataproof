events {

}

http {
    server {
        listen 80;
        location / {
            proxy_pass http://landing:3000;
        }
        server_name curra.io;

        listen 443 ssl; 

        ssl_certificate /etc/letsencrypt/live/curra.io/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/curra.io/privkey.pem; # managed by Certbot

        include /etc/letsencrypt/options-ssl-nginx.conf; 

        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 80;
        location / {
            proxy_pass http://client:3000;
        }
        server_name app.curra.io;

        listen 443 ssl; 

        ssl_certificate /etc/letsencrypt/live/app.curra.io/fullchain.pem; 
        ssl_certificate_key /etc/letsencrypt/live/app.curra.io/privkey.pem; 

        include /etc/letsencrypt/options-ssl-nginx.conf; 

        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 80;
        location / {
            proxy_pass http://mdbook:3000;
        }
        server_name docs.curra.io;

        listen 443 ssl; 

        ssl_certificate /etc/letsencrypt/live/docs.curra.io/fullchain.pem; 
        ssl_certificate_key /etc/letsencrypt/live/docs.curra.io/privkey.pem; 

        include /etc/letsencrypt/options-ssl-nginx.conf; 

        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 80;
        location / {
            proxy_pass http://coordinator-goerli:80;
        }

        server_name goerli.coordinator.curra.io;

        listen 443 ssl; 

        ssl_certificate /etc/letsencrypt/live/goerli.coordinator.curra.io/fullchain.pem; 
        ssl_certificate_key /etc/letsencrypt/live/goerli.coordinator.curra.io/privkey.pem; 

        include /etc/letsencrypt/options-ssl-nginx.conf; 

        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }

        # deny external access to webhooks
        location /balance/webhooks/connector/deposit {
            deny all;
        }
        location /ownerships/webhooks/connector/transfer {
            deny all;
        }
        location /incomes/webhooks/connector/transfer {
            deny all;
        }
        location /hooks/webhooks/connector/transfer {
            deny all;
        }
    }

    server {
        listen 80;
        location / {
            proxy_pass http://coordinator-ethereum:80;
        }
        server_name ethereum.coordinator.curra.io;

        listen 443 ssl; # managed by Certbot

        # RSA certificate
        ssl_certificate /etc/letsencrypt/live/ethereum.coordinator.curra.io/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/ethereum.coordinator.curra.io/privkey.pem; # managed by Certbot

        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

        # Redirect non-https traffic to https
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
        # managed by Certbot

        # deny external access to webhooks
        location /balance/webhooks/connector/deposit { 
            deny all;
        }
        location /ownerships/webhooks/connector/transfer { 
            deny all;
        }
        location /incomes/webhooks/connector/transfer { 
            deny all;
        }
        location /hooks/webhooks/connector/transfer { 
            deny all;
        }
    }

    server {
        listen 80;
        location / {
            proxy_pass http://coordinator-kcc:80;
        }
        server_name kcc.coordinator.curra.io;

        listen 443 ssl; # managed by Certbot

        # RSA certificate
        ssl_certificate /etc/letsencrypt/live/kcc.coordinator.curra.io/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/kcc.coordinator.curra.io/privkey.pem; # managed by Certbot

        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

        # Redirect non-https traffic to https
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
        # managed by Certbot

        # deny external access to webhooks
        location /balance/webhooks/connector/deposit { 
            deny all;
        }
        location /ownerships/webhooks/connector/transfer { 
            deny all;
        }
        location /incomes/webhooks/connector/transfer { 
            deny all;
        }
        location /hooks/webhooks/connector/transfer { 
            deny all;
        }
    }

    server {
        listen 80;
        location / {
            proxy_pass http://coordinator-bsc:80;
        }
        server_name bsc.coordinator.curra.io;

        listen 443 ssl; # managed by Certbot

        # RSA certificate
        ssl_certificate /etc/letsencrypt/live/bsc.coordinator.curra.io/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/bsc.coordinator.curra.io/privkey.pem; # managed by Certbot

        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

        # Redirect non-https traffic to https
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
        # managed by Certbot

        # deny external access to webhooks
        location /balance/webhooks/connector/deposit { 
            deny all;
        }
        location /ownerships/webhooks/connector/transfer { 
            deny all;
        }
        location /incomes/webhooks/connector/transfer { 
            deny all;
        }
        location /hooks/webhooks/connector/transfer { 
            deny all;
        }
    }

    server {
        listen 80;
        location / {
            proxy_pass http://coordinator-polygon:80;
        }
        server_name polygon.coordinator.curra.io;

        listen 443 ssl; # managed by Certbot

        # RSA certificate
        ssl_certificate /etc/letsencrypt/live/polygon.coordinator.curra.io/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/polygon.coordinator.curra.io/privkey.pem; # managed by Certbot

        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

        # Redirect non-https traffic to https
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
        # managed by Certbot

        # deny external access to webhooks
        location /balance/webhooks/connector/deposit { 
            deny all;
        }
        location /ownerships/webhooks/connector/transfer { 
            deny all;
        }
        location /incomes/webhooks/connector/transfer { 
            deny all;
        }
        location /hooks/webhooks/connector/transfer { 
            deny all;
        }
    }

    server {
        listen 80;
        location / {
            proxy_pass http://kibana:5601;
        }
        server_name kibana.curra.io;

        listen 443 ssl; 

        ssl_certificate /etc/letsencrypt/live/kibana.curra.io/fullchain.pem; 
        ssl_certificate_key /etc/letsencrypt/live/kibana.curra.io/privkey.pem; 

        include /etc/letsencrypt/options-ssl-nginx.conf; 

        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
    }
    

    # server {
    #     listen 80;
    #     location / {
    #         proxy_pass http://invoice:3000;
    #     }
    #     server_name invoice.curra.io;

    #     listen 443 ssl; # managed by Certbot

    #     # RSA certificate
    #     ssl_certificate /etc/letsencrypt/live/invoice.curra.io/fullchain.pem; # managed by Certbot
    #     ssl_certificate_key /etc/letsencrypt/live/invoice.curra.io/privkey.pem; # managed by Certbot

    #     include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

    #     # Redirect non-https traffic to https
    #     if ($scheme != "https") {
    #         return 301 https://$host$request_uri;
    #     }
    #     # managed by Certbot
    # }

}
